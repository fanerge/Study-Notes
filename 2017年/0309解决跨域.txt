参考文献地址：https://juejin.im/post/58e8c932ac502e4957bde78b
一.JSONP
 1.js原生的jsop
<script type="text/javascript">
function callbackFunction(result, methodName){
	var html = '<ul>';
	for(var i = 0; i < result.length; i++){
		html += '<li>' + result[i] + '</li>';
	}
	html += '</ul>';
	document.getElementById('divCustomers').innerHTML = html;
}
</script>
<script type="text/javascript" src="http://www.runoob.com/try/ajax/jsonp.php?jsoncallback=callbackFunction"></script>

 2.$.ajax方式的jsonp
 $.ajax({
	 type:"get",
	 url:"http://www.runoob.com/try/ajax/jsonp.php?jsoncallback=cb",/*jsoncallback的命名由服务端决定，cb命名由客户端决定*/
	 dataType:"jsonp",
	 //jsonpCallback:"cb",/*在一个 jsonp 中规定回调函数的名称,必须下面一致*/
	 success:function(dd){
		console.log('成功了：' + dd)
	 }
 });
 function cb(result, methodName){
	var html = '<ul>';
	for(var i = 0; i < result.length; i++){
		html += '<li>' + result[i] + '</li>';
	}
	html += '</ul>';
	document.getElementById('divCustomers').innerHTML = html;
}

3.$.getJson方式的jsonp
$.getJSON("http://www.runoob.com/try/ajax/jsonp.php?jsoncallback=?", function(data) {
    
    var html = '<ul>';
    for(var i = 0; i < data.length; i++)
    {
        html += '<li>' + data[i] + '</li>';
    }
    html += '</ul>';
    
    $('#divCustomers').html(html); 
});
二.document.domain + iframe
	来自www.a.com想要获取document.a.com中的数据
	document.domain = 'a.com';
	var iframe = document.createElement('iframe');
	iframe.src = 'http://document.a.com';
	iframe.style.display = 'none';
	document.body.appendChild(iframe);

	iframe.onload = function() {
	  var targetDocument = iframe.contentDocument || iframe.contentWindow.document;
	  //可以操作targetDocument
	}
三.window.name + iframe
四.window.postMessage
服务端协助跨域
1.反向代理
	客户端直接发送请求给代理服务器，然后代理服务器会根据客户端的请求，从真实的资源服务器中获取资源返回给客户端。
2.CORS
	CORS的核心思想是通过一系列新增的HTTP头信息来实现服务器和客户端之间的通信。所以，要支持CORS，服务端都需要做好相应的配置，这样，在保证安全性的同时也更方便了前端的开发。























