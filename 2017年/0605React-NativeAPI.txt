1.ActionSheetIOS
	方法：
		static showActionSheetWithOptions(options: Object, callback: Function)
			第一个参数
				options（字符串数组） - 一组按钮的标题（必选）
				cancelButtonIndex（整型） - 选项中取消按钮所在的位置（索引）
				destructiveButtonIndex（整型） - 选项中删除按钮所在的位置（索引）
				title（字符串） - 弹出框顶部的标题
				message（字符串） - 弹出框顶部标题下方的信息
		static showShareActionSheetWithOptions(options: Object, failureCallback: Function, successCallback: Function)
			第一个参数
				message（字符串） - 要分享的信息（必填）
				url（字符串） - 要分享的URL地址
				subject（字符串） - 要分享的信息主题
				excludedActivityTypes（数组） - 指定在actionsheet中不显示的活动
2.AdSupportIOS
	方法：
		static getAdvertisingId(onSuccess, onFailure)
		static getAdvertisingTrackingEnabled(onSuccess, onFailure)
3.Alert
	启动一个提示对话框，包含对应的标题和信息。
	方法：
		static alert(title: string, message?: string, button?: Buttons, type?: AlertType) 
4.AlertIOS
	启动一个提示对话框，包含对应的标题和信息。	
	static alert(title: string, message?: string, buttons?: Array<{
		  text?: string;
		  onPress?: ?Function;
		  style?: AlertButtonStyle;
		}>, type?: AlertType) 
	static prompt(title: string, value?: string, buttons?: Array<{
		  text?: string;
		  onPress?: ?Function;
		  style?: AlertButtonStyle;
		}>, callback?: Function)
5.Animated
	方法：
		static decay(value: AnimatedValue | AnimatedValueXY, config: DecayAnimationConfig)
			推动一个值以一个初始的速度和一个衰减系数逐渐变为0。
		static timing(value: AnimatedValue | AnimatedValueXY, config: TimingAnimationConfig)
			推动一个值按照一个过渡曲线而随时间变化。
		static spring(value: AnimatedValue | AnimatedValueXY, config: SpringAnimationConfig) 
			产生一个基于Rebound和Origami实现的Spring动画。
		static add(a: Animated, b: Animated)
			将两个动画值相加计算，创建一个新的动画值。
		static multiply(a: Animated, b: Animated) 	
			将两个动画值相乘计算，创建一个新的动画值。
		static delay(time: number) 
			在指定的延迟之后开始动画。
		static sequence(animations: Array<CompositeAnimation>) 
			按顺序执行一个动画数组里的动画，等待一个完成后再执行下一个。
		static parallel(animations: Array<CompositeAnimation>, config?: ParallelConfig)	
			同时开始一个动画数组里的全部动画。
		static stagger(time: number, animations: Array<CompositeAnimation>)
			一个动画数组，里面的动画有可能会同时执行（重叠），不过会以指定的延迟来开始。用来制作拖尾效果非常合适。
		static event(argMapping: Array<Mapping>, config?: EventConfig)
			接受一个映射的数组，对应的解开每个值，然后调用所有对应的输出的setValue方法。
		static createAnimatedComponent(Component: any)
			使得任何一个React组件支持动画。用它来创建Animated.View等等。	
	属性：
		Value: AnimatedValue
			表示一个数值的类，用于驱动动画。通常用new Animated.Value(0);来初始化。
		ValueXY: AnimatedValueXY 
			表示一个2D值的类，用来驱动2D动画，例如拖动操作等。
	class AnimatedValue
		用于驱动动画的标准值。
	class AnimatedValueXY
		用来驱动2D动画的2D值，譬如滑动操作等。
6.AppRegistry
	AppRegistry是JS运行所有React Native应用的入口。
	方法：
		static registerConfig(config: Array<AppConfig>)
		static registerComponent(appKey: string, getComponentFunc: ComponentProvider)
			应用的根组件应当通过AppRegistry.registerComponent方法注册自己
		static registerRunnable(appKey: string, func: Function)
		static getAppKeys()	
		static runApplication(appKey: string, appParameters: any) 	
		static unmountApplicationComponentAtRootTag(rootTag: number) 
			要“结束”一个应用并销毁视图的话
7.AppState 
	AppState能告诉你应用当前是在前台还是在后台，并且能在状态变化的时候通知你。
		active(前台)、background(后台)、inactive(过渡)
	方法：
		static addEventListener(type: string, handler: Function) 
			添加一个监听函数，用于监听应用状态的变化。type参数应填change 。
		static removeEventListener(type: string, handler: Function) 
			移除一个监听函数。type参数应填change。
	属性：
		AppState.currentState 
			获得当前应用的状态
8.AsyncStorage
	AsyncStorage是一个简单的、异步的、持久化的Key-Value存储系统，它对于App来说是全局性的。
	推荐使用react-native-storage模块
	方法：
		static getItem(key: string, callback?: ?(error: ?Error, result: ?string) => void)
			读取key字段并将结果作为第二个参数传递给callback。返回一个Promise对象。
		static setItem(key: string, value: string, callback?: ?(error: ?Error) => void) 
			将key字段的值设置成value，并在完成后调用callback函数。
		static removeItem(key: string, callback?: ?(error: ?Error) => void)
			删除一个字段。
		static mergeItem(key: string, value: string, callback?: ?(error: ?Error) => void)
			假设已有的值和新的值都是字符串化的JSON，则将两个值合并。
		static clear(callback?: ?(error: ?Error) => void)
			删除全部的AsyncStorage数据，不论来自什么库或调用者。
		static getAllKeys(callback?: ?(error: ?Error, keys: ?Array<string>) => void)
			获取所有本应用可以访问到的数据，不论来自什么库或调用者。
		static flushGetRequests()
			清除所有进行中的查询操作。
		static multiGet(keys: Array<string>, callback?: ?(errors: ?Array<Error>, result: ?Array<Array<string>>) => void) 
			获取keys所包含的所有字段的值，调用callback回调函数时返回一个key-value数组形式的数组。	
		static multiSet(keyValuePairs: Array<Array<string>>, callback?: ?(errors: ?Array<Error>) => void)
			multiSet和multiMerge都接受一个与multiGet输出值一致的key-value数组的数组。返回一个Promise对象。
		static multiRemove(keys: Array<string>, callback?: ?(errors: ?Array<Error>) => void) 
			删除所有键在keys数组中的数据。
		static multiMerge(keyValuePairs: Array<Array<string>>, callback?: ?(errors: ?Array<Error>) => void) 
			将多个输入的值和已有的值合并，要求都是字符串化的JSON。
9.BackAndroid
	监听硬件的back键操作。
	方法：
		static exitApp() 
		static addEventListener(eventName: BackPressEventName, handler: Function)
		static removeEventListener(eventName: BackPressEventName, handler: Function)
10.CameraRoll
	CameraRoll模块提供了访问本地相册的功能。
	推荐使用react-native-image-picker模块
	方法：
		static saveImageWithTag(tag) 
			保存一个图片到相册。
		static saveToCameraRoll(tag, type?)
			把图片或视频保存到相册中。
		static getPhotos(params: object)
			返回一个带有图片标识符对象的Promise。
11.Clipboard
	Clipboard组件可以在iOS和Android的剪贴板中读写内容。
	方法：
		static getString()
			获取剪贴板的文本内容，返回一个Promise你可以用下面的方式来调用。
		static setString(content: string)
			设置剪贴板的文本内容。
12.DatePickerAndroid
	本组件会打开一个标准的Android日期选择器的对话框。
	方法：
		static open(options: Object) 
			打开一个标准的Android日期选择器的对话框。
			第一个参数	
				date (Date对象或毫秒时间戳) - 默认显示的日期
				minDate (Date对象或毫秒时间戳) - 可选的最小日期
				maxDate (Date对象或毫秒时间戳) - 可选的最大日期
				mode ((enum('calendar', 'spinner', 'default')) - 设置选择器的模式：
		static dateSetAction()
			已选中一个日期。
		static dismissedAction()
			取消对话框。
13.Dimensions
	本模块用于获取设备屏幕的宽高。
	方法：
		static set(dims: {[key:string]: any})
			这个函数只应该被原生代码调用。
		static get(dim: string)
			初始的尺寸信息应该在runApplication之后被执行，所以它可以在任何其他的require被执行之前就可用。
			var {height, width} = Dimensions.get('window');
14.Easing
	各种动画运动的速度曲线
	方法：
		static step0(n) 
		static step1(n) 
		static linear(t) 
		static ease(t) 
		static quad(t) 
		static cubic(t) 
		static poly(n) 
		static sin(t) 
		static circle(t) 
		static exp(t) 
		static elastic(bounciness) 
		static back(s) 
		static bounce(t) 
		static bezier(x1, y1, x2, y2) 
		static in(easing) 
		static out(easing) 
		static inOut(easing) 
15.Geolocation
	定位API遵循web标准。
	方法：
		static getCurrentPosition(geo_success: Function, geo_error?: Function, geo_options?: GeoOptions)
			成功时会调用geo_success回调，参数中包含最新的位置信息。
		static watchPosition(success: Function, error?: Function, options?: GeoOptions) 
			持续监听位置，每当位置变化之后都调用success回调。
		static clearWatch(watchID: number) 
		static stopObserving()
16.ImageEditor
	方法：
		static cropImage(uri, cropData, success, failure)
			根据指定的URI参数剪裁对应的图片。
17.ImagePickerIOS
	方法：
		static canRecordVideos(callback) 
		static canUseCamera(callback) 
		static openCameraDialog(config, successCallback, cancelCallback) 
		static openSelectDialog(config, successCallback, cancelCallback) 
18.ImageStore
	方法：
		static hasImageForTag(uri, callback)
			检查ImageStore中是否包含了指定URI的图片数据。
		static removeImageForTag(uri)
			从ImageStore中删除指定图片。
			存储在ImageStore中的图标必须手动删除，否则在应用退出之前将会一直占用内存。
		static addImageFromBase64(base64ImageData, success, failure)
			在ImageStore中以base64编码格式存储一幅图片，并返回一个URI以便访问或显示此图片。
		static getBase64ForTag(uri, success, failure) 
			将ImageStore中的指定URI图片以base64编码格式的数据返回。
19.InteractionManager
	Interactionmanager可以将一些耗时较长的工作安排到所有互动或动画完成之后再进行。这样可以保证JavaScript动画的流畅运行。
	方法：
		static runAfterInteractions(callback: Function) 
			安排一个函数在所有的交互和动画完成之后运行。
		static createInteractionHandle() 
			通知管理器有某个动画或者交互开始了。
		static clearInteractionHandle(handle: Handle)
			通知管理器有某个动画或者交互已经结束了。
		static setDeadline(deadline: number) 	
			如果设定了一个正整数值，则会使用setTimeout来挂起所有尚未执行的任务。
	属性：
		Events: CallExpression
		addListener: CallExpression
20.Keyboard
	Keyboard组件可以用来控制键盘相关的事件。
	方法：
		static addListener(nativeEvent, jsFunction)
			addListener用于注册一个JavaScript函数来监听处理原生键盘通知事件。此方法会返回监听函数的引用。
		static removeAllListeners(eventType)
			移除某个类型事件的所有监听函数。
		static removeSubscription(subscription)
			subscription 要移除的监听函数。
		static dismiss()
			把弹出的键盘收回去。
21.LayoutAnimation
	当布局变化时，自动将视图运动到它们新的位置上。
	方法：
		static configureNext(config: Config, onAnimationDidEnd?: Function)
			计划下一次布局要发生的动画。
		static create(duration: number, type, creationProp)
			用来创建configureNext所需的config参数的辅助函数。
	属性：
		Types: CallExpression #
		Properties: CallExpression 
		configChecker: CallExpression 
		Presets: ObjectExpression 
		easeInEaseOut: CallExpression 
		linear: CallExpression 
		spring: CallExpression
22.Linking
	Linking提供了一个通用的接口来与传入和传出的App链接进行交互。
	方法：
		static addEventListener(type: string, handler: Function)
			添加一个监听Linking变化的事件。
		static removeEventListener(type: string, handler: Function)
			删除一个事件处理函数。
		static openURL(url: string)
			尝试使用设备上已经安装的应用打开指定的url。
		static canOpenURL(url: string, callback: Function)
			判断设备上是否有已经安装的应用可以处理指定的URL。
		static getInitialURL()
			如果应用是被一个链接调起的，则会返回相应的链接地址。
23.NativeMethodsMixin
	NativeMethodsMixin提供了一些用于直接访问底层原生组件的方法。	
	方法：
		static measure(callback: MeasureOnSuccessCallback)
			计算指定视图在屏幕上显示的位置和尺寸，通过一个异步回调返回计算的结果。
		static measureLayout(relativeToNativeNode: number, onSuccess: MeasureLayoutOnSuccessCallback, onFail: () => void)
			与measure()函数类似，不过计算的是相对指定祖先节点relativeToNativeNode的位置和尺寸。这意味着返回的x, y是相对于指定祖先视图的。	
		static setNativeProps(nativeProps: Object)	
			这个函数直接发送属性到原生代码。
		static focus()
			请求聚焦指定的输入框或者视图。
		static blur()
			移除指定的输入框或者视图的焦点。
24.NetInfo
	NetInfo模块可以获知设备联网或离线的状态信息。
	方法：
		static addEventListener(eventName, handler)
			在网络状况/类型发生变化时调用此监听函数。
		static removeEventListener(eventName, handler) 
			移除网络状况/类型变化的监听函数。
		static fetch()
			返回一个promise，用于获取当前的网络状况/类型。
		static isConnectionExpensive()
			用于判断当前活动的连接是否计费。
	属性：
		isConnected: ObjectExpression
			以异步方式获取一个布尔值，用于判断当前设备是否联网。
25.PanResponder
	PanResponder类可以将多点触摸操作协调成一个手势。
	方法：
		static create(config: object)
26.PermissionsAndroid
	PermissionsAndroid可以访问Android M(也就是6.0)开始提供的权限模型。
	有一些权限在AndroidManifest.xmlAndroidManifest.xml配置，有一些必须获得用户的允许。
	方法：
		constructor ()
		check(permission)
			返回一个promise，最终值为用户是否授权过的布尔值。
		request(permission, rationale?) 
			弹出提示框向用户请求某项权限。
		requestMultiple(permissions)
27.PixelRatio
	PixelRatio类提供了访问设备的像素密度的方法
	方法：
		static get()
			返回设备的像素密度。
		static getFontScale()
			返回字体大小缩放比例。
		static getPixelSizeForLayoutSize(layoutSize: number) 
			将一个布局尺寸(dp)转换为像素尺寸(px)。
		static startDetecting()
			本函数在移动设备上没有作用。	
28.PushNotificationIOS
	本模块帮助你处理应用的推送通知，包括权限控制以及应用图标上的角标数（未读消息数）。
	方法：
		static presentLocalNotification(details: Object)
			立即产生一个本地通知。
		static scheduleLocalNotification(details: Object)
			计划一个本地通知，在将来进行提示。
		static cancelAllLocalNotifications()
			取消所有已计划的本地通知
		static setApplicationIconBadgeNumber(number: number)
			设置要在手机主屏幕应用图标上显示的角标数（未读消息数）。
		static getApplicationIconBadgeNumber(callback: Function)
			获取目前在手机主屏幕应用图标上显示的角标数（未读消息数）。
		static addEventListener(type: string, handler: Function)
			添加一个监听器，监听远程或本地推送的通知事件，不论应用在前台还是在后台运行.
		static requestPermissions(permissions?: {
			alert?: boolean,
			badge?: boolean,
			sound?: boolean
		  })
			向iOS系统请求通知权限，给用户展示一个对话框。
		static abandonPermissions()
			注销所有从苹果推送通知服务收到的远程消息。
		static checkPermissions(callback: Function) 
			检查哪些推送通知权限被开启。
		static removeEventListener(type: string, handler: Function)
			移除注册事件监听器。
		static getInitialNotification()
			如果用户通过点击推送通知来冷启动应用（即：之前应用不在运行状态），此函数会返回一个初始的通知。
		constructor(nativeNotif: Object)
			你应该永远不需要自己实例化PushNotificationIOS对象。
		finish(fetchResult)
		getMessage()		
			getAlert方法的别名。
		getSound()
			从aps对象中获取声音字符串。
		getAlert()
			从aps对象中获取推送通知的主消息内容。
		getBadgeCount()
			从aps对象中获取推送通知的角标数（未读消息数）。
		getData()
			获取推送的数据对象。
29.Share
	方法：
		static share(content, options)
			打开一个对话框来共享文本内容。
		static sharedAction()
			内容已成功共享。
		static dismissedAction()
			该对话框已被拒绝。
30.StyleSheet
	StyleSheet提供了一种类似CSS样式表的抽象。
	方法：
		static create(obj: {[key: string]: any})
	属性：
		hairlineWidth: CallExpression
			这一常量定义了当前平台上的最细的宽度。
		absoluteFill: CallExpression
		absoluteFillObject: ObjectExpression	
		flatten: CallExpression
31.Systrace
	方法：
		static setEnabled(enabled)
		static beginEvent(profileName?, args?)
		static endEvent()
		static beginAsyncEvent(profileName?)
		static endAsyncEvent(profileName?, cookie?)
		static counterEvent(profileName?, value?)
		static attachToRelayProfiler(relayProfiler)
		static swizzleJSON()
		static measureMethods(object, objectName, methodNames)
		static measure(objName, fnName, func)
32.TimePickerAndroid
	本组件会打开一个标准的Android时间选择器的对话框。	
	方法：
		static open(options: Object)
			打开一个标准的Android时间选择器的对话框。
		static timeSetAction() 
			已选中一个时间。
		static dismissedAction()
			取消对话框。
33.ToastAndroid
	方法：
		static show(message: string, duration: number) 
		static showWithGravity(message, duration, gravity)
	属性：
		SHORT: MemberExpression 
		LONG: MemberExpression 
		TOP: MemberExpression 
		BOTTOM: MemberExpression 
		CENTER: MemberExpression
34.Vibration
	本模块导出函数Vibration.vibrate()用于控制设备震动。
	方法：
		static vibrate(pattern, repeat)
			启动震动。
		static cancel() 
			停止震动。
35.布局样式属性
	position enum('absolute', 'relative')
	top number
	right number
	bottom number
	left number
	flexDirection enum('row', 'row-reverse', 'column', 'column-reverse')
	justifyContent enum('flex-start', 'flex-end', 'center', 'space-between', 'space-around')
	alignItems enum('flex-start', 'flex-end', 'center', 'stretch') 
	alignSelf enum('auto', 'flex-start', 'flex-end', 'center', 'stretch')
	flex number	
	flexBasis number
	flexGrow number	
	flexShrink number	
	flexWrap enum('wrap', 'nowrap')	
	borderBottomWidth number	
	borderWidth number	
	height number 	
	width number	
	minHeight number	
	minWidth number
	maxHeight number	
	maxWidth number
	padding number
	paddingBottom number
	paddingHorizontal number
	paddingVertical number 	
	margin number	
	marginBottom number	
	marginHorizontal number	
	marginVertical number	
	overflow enum('visible', 'hidden', 'scroll') 
	zIndex number
36.阴影样式属性
	属性：
		ios shadowColor color -- 设置阴影色
		ios shadowOffset {width: number, height: number} -- 设置阴影偏移
		ios shadowOpacity number -- 设置阴影不透明度 (乘以颜色的alpha分量)
		ios shadowRadius number -- 设置阴影模糊半径










	
		
		
		
		
		
		