组合模式、部分-整体模式（Composite）
1.定义：将对象组合成树形结构以表示"部分-整体"的层次结构，组合模式使得用户对单个对象和组合对象的使用具有一致性。
	组合模式让你可以优化处理递归或分级数据结构。
	由以下两部分组成：
		子对象（Leaf）：组成组合对象的最基本对象。
		组合对象（Composite）：由子对象组合起来的复杂对象。
2.应用：系统目录结构、网站导航结构、文件扫描	
	//定义组合对象
	let Folder = function( name ){
		this.name = name;
		this.files = [];
	};
	Folder.prototype.add = function( file ){
		this.files.push( file );
	};
	Folder.prototype.scan = function(){
		console.log('开始文件扫描:' + this.name);
		for( let i = 0, file, files = this.files; file = files[i++]; ){
			file.scan();
		}
	};
	//定义叶子对象
	let File = function( name ){
		this.name = name;
	};
	File.prototype.add = function(){
		throw new Error('文件下面不能再添加文件');
	};
	File.prototype.scan = function(){
		console.log('开始扫瞄：' + this.name);
	};

	let folder = new Folder('前端学习');
	let folder1 = new Folder('JS学习');
	let folder2 = new Folder('JQ学习');

	let file1 = new File('JS设计模式');
	let file2 = new File('JQ实战');
	let file3 = new File('前端性能');
	folder1.add(file1);
	folder2.add(file2);
	folder.add(folder1);
	folder.add(folder2);
	folder.add(file3);
	folder.scan();


















